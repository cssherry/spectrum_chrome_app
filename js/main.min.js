var publications;var mediaBias;var publicationUrl="https://spectrum-backend.herokuapp.com/feeds/publications";function processPublicationUrls(b){var a={};b.forEach(function(c){if(!c.fields.skip_scraping){a[cleanUrl(c.fields.base_url)]=c}});return a}function getAssociations(){var b=window.location;var a=spectrum.init(b,publications,mediaBias);chrome.runtime.onMessage.addListener(function(e,d,c){var f={};if(e.action==="hideSpectrumPanel"){f[e.showType]=e.typeButton;setLocalStorage(f);if(e.showType==="hidden"){a._hideContainer(e.typeButton)}else{a._hideIcon()}return true}else{if(e.action==="showSpectrumPanel"){f[e.showType]=null;setLocalStorage(f);if(e.showType==="hidden"){a._showContainer();a.getAssociations()}else{a._showIcon()}return true}else{if(e.action==="getLocalStorage"){getLocalStorage(e.localValues,function(g){g.currentArticle=!!a.currentArticle;c(g);return true});return true}}}})}publications=processValue(JSON.parse(localStorage.getItem("publications")));getLocalStorage(["mediaBias"],function(a){mediaBias=a.mediaBias;if(publications&&mediaBias){getAssociations()}else{$.ajax({url:publicationUrl,type:"GET",}).fail(function(c,b,d){logError("Failed to get publications and media biases",c,b,d)}).done(function(b){publications=processPublicationUrls(b.publications);mediaBias=b.media_bias;localStorage.setItem("publications",JSON.stringify({dateSaved:new Date().toString(),data:publications,}));setLocalStorage({mediaBias:mediaBias,},getAssociations,true)})}});